name: SonarCloud Unified Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Backend (Java)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build Backend and Run Tests
        working-directory: ./back
        run: mvn clean verify

      # Frontend (Node.js)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json
      - name: Install Frontend Dependencies
        working-directory: ./front
        run: npm ci
      - name: Run Frontend Tests with Coverage
        working-directory: ./front
        run: npm run test:ci

      # SonarCloud analysis AVEC attente du Quality Gate
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=vacheronpradelalyssa
            -Dsonar.projectKey=vacheronpradelalyssa_bobapp-complete
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # NOUVEAU : Vérifier le Quality Gate et créer l'artifact
      - name: Check Quality Gate Status
        id: quality-gate
        uses: actions/github-script@v7
        with:
          script: |
            const projectKey = 'vacheronpradelalyssa_bobapp-complete';
            const organization = 'vacheronpradelalyssa';
            
            try {
              console.log('🔍 Checking Quality Gate status...');
              
              const response = await fetch(
                `https://sonarcloud.io/api/qualitygates/project_status?projectKey=${projectKey}&organization=${organization}`,
                {
                  headers: {
                    'Authorization': `Bearer ${{ secrets.SONAR_TOKEN }}`
                  }
                }
              );
              
              if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
              }
              
              const data = await response.json();
              const status = data.projectStatus.status;
              
              console.log(`📊 Quality Gate Status: ${status}`);
              
              if (status === 'OK') {
                console.log('✅ Quality Gate PASSED');
              } else {
                console.log('❌ Quality Gate FAILED');
                if (data.projectStatus.conditions) {
                  console.log('📋 Failed conditions:');
                  data.projectStatus.conditions.forEach(condition => {
                    if (condition.status !== 'OK') {
                      console.log(`  - ${condition.metricKey}: ${condition.actualValue} (required: ${condition.comparator} ${condition.errorThreshold})`);
                    }
                  });
                }
              }
              
              core.setOutput('status', status);
              
            } catch (error) {
              console.log(`❌ Error checking Quality Gate: ${error.message}`);
              core.setOutput('status', 'ERROR');
            }
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # NOUVEAU : Créer l'artifact avec le statut Quality Gate
      - name: Create Quality Gate Artifact
        run: |
          echo "${{ steps.quality-gate.outputs.status }}" > quality-gate.txt
          echo "Quality Gate status saved: ${{ steps.quality-gate.outputs.status }}"

      - name: Upload Quality Gate Status
        uses: actions/upload-artifact@v4
        with:
          name: quality-gate
          path: quality-gate.txt
          retention-days: 1

      - name: Analysis Complete
        run: |
          echo "🎉 SonarCloud Analysis completed!"
          echo "📊 Quality Gate Status: ${{ steps.quality-gate.outputs.status }}"
          echo "📋 Check details: https://sonarcloud.io/project/overview?id=vacheronpradelalyssa_bobapp-complete"