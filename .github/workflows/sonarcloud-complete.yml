name: SonarCloud Unified Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Backend (Java)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build Backend and Run Tests
        working-directory: ./back
        run: |
          echo "üî® Step 1: Copy dependencies..."
          mvn dependency:copy-dependencies -DoutputDirectory=target/dependency -q
          
          echo "üî® Step 2: Clean and verify with coverage..."
          mvn clean verify -q
          
          echo "‚úÖ Backend build completed!"
          
          # Debug: v√©rifier que tout existe
          echo "=== Dependencies check ==="
          if [ -d "target/dependency" ]; then
            echo "‚úÖ Dependencies folder exists with $(ls target/dependency | wc -l) files"
            ls target/dependency/*.jar | head -5 || echo "No jar files found"
          else
            echo "‚ùå Dependencies folder missing"
          fi
          
          echo "=== JaCoCo check ==="
          if [ -f "target/site/jacoco/jacoco.xml" ]; then
            echo "‚úÖ JaCoCo report exists ($(wc -l < target/site/jacoco/jacoco.xml) lines)"
          else
            echo "‚ùå JaCoCo report missing"
          fi
          
      # Frontend (Node.js)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json
      
      - name: Install Frontend Dependencies
        working-directory: ./front
        run: npm ci
      
      - name: Run Frontend Tests with Coverage
        working-directory: ./front
        run: |
          npm run test:ci
          echo "‚úÖ Frontend tests completed with coverage"

      # Debug pour v√©rifier les fichiers
      - name: Verify Coverage Files
        run: |
          echo "=== Backend Coverage ==="
          ls -la back/target/site/jacoco/ || echo "‚ùå No jacoco report"
          
          echo "=== Frontend Coverage ==="
          ls -la front/coverage/ || echo "‚ùå No frontend coverage"
          
          echo "=== Dependencies ==="
          ls -la back/target/dependency/ || echo "‚ùå No dependencies"

      # SonarCloud analysis avec nouveau projet
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          args: >
            -Dsonar.organization=vacheronpradelalyssa
            -Dsonar.projectKey=vacheronpradelalyssa_bobapp-complete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Analysis Complete
        run: |
          echo "üéâ SonarCloud Analysis completed for BobApp Complete!"
          echo "üìä Check results at: https://sonarcloud.io/project/overview?id=vacheronpradelalyssa_bobapp-complete"