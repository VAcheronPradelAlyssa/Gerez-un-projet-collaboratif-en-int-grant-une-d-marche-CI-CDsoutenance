name: Docker Build & Publish

on:
  workflow_run:
    workflows: ["SonarCloud Unified Analysis"]
    types:
      - completed

jobs:
  check-quality-gate:
    name: Check Sonar Quality Gate
    runs-on: ubuntu-latest
    steps:
      - name: Download Quality Gate Artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: SonarCloud Unified Analysis  # <-- Le nom du workflow, PAS le nom du fichier
          name: quality-gate
          path: ./
      - name: Read Quality Gate Status
        id: read_status
        run: |
          STATUS=$(cat quality-gate.txt)
          echo "Quality Gate status: $STATUS"
          echo "status=$STATUS" >> $GITHUB_OUTPUT

    outputs:
      quality_gate_status: ${{ steps.read_status.outputs.status }}

  docker-build:
    name: Build & Test Docker Images
    runs-on: ubuntu-latest
    needs: check-quality-gate
    if: needs.check-quality-gate.outputs.quality_gate_status == 'OK'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Images
        run: |
          echo "ðŸ”¨ Building Docker images..."
          docker build -t bobapp-backend:test ./back
          docker build -t bobapp-frontend:test ./front
          echo "âœ… Images built successfully!"

      - name: Test Images Locally
        run: |
          echo "ðŸ§ª Testing images locally..."
          docker run -d --name test-backend -p 8080:8080 bobapp-backend:test
          sleep 15
          echo "Testing backend endpoint..."
          curl -f http://localhost:8080/api/joke && echo "âœ… Backend OK" || exit 1
          docker stop test-backend
          docker rm test-backend
          docker run -d --name test-frontend -p 4020:80 bobapp-frontend:test
          sleep 10
          echo "Testing frontend..."
          curl -f http://localhost:4020 && echo "âœ… Frontend OK" || exit 1
          docker stop test-frontend
          docker rm test-frontend
          echo "âœ… All tests passed!"

  docker-publish:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        run: |
          echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Build and Push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./back
          push: true
          tags: |
            vacheronalyssa/bobapp-backend:latest
            vacheronalyssa/bobapp-backend:${{ steps.meta.outputs.sha_short }}
            vacheronalyssa/bobapp-backend:${{ steps.meta.outputs.date }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./front
          push: true
          tags: |
            vacheronalyssa/bobapp-frontend:latest
            vacheronalyssa/bobapp-frontend:${{ steps.meta.outputs.sha_short }}
            vacheronalyssa/bobapp-frontend:${{ steps.meta.outputs.date }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Published Images
        run: |
          echo "ðŸ§ª Testing published images from Docker Hub..."
          docker run -d --name hub-backend -p 8080:8080 vacheronalyssa/bobapp-backend:latest
          sleep 20
          curl -f http://localhost:8080/api/joke && echo "âœ… Backend from Docker Hub OK" || exit 1
          docker stop hub-backend && docker rm hub-backend
          docker run -d --name hub-frontend -p 4020:80 vacheronalyssa/bobapp-frontend:latest
          sleep 15
          curl -f http://localhost:4020 && echo "âœ… Frontend from Docker Hub OK" || exit 1
          docker stop hub-frontend && docker rm hub-frontend
          echo "ðŸŽ‰ All images published and tested successfully!"

      - name: Display Image Info
        run: |
          echo "ðŸ“¦ Published images:"
          echo "Backend: vacheronalyssa/bobapp-backend:latest"
          echo "Backend: vacheronalyssa/bobapp-backend:${{ steps.meta.outputs.sha_short }}"
          echo "Frontend: vacheronalyssa/bobapp-frontend:latest"
          echo "Frontend: vacheronalyssa/bobapp-frontend:${{ steps.meta.outputs.sha_short }}"